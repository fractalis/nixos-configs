# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  /*
    fileSystems."/" =
      { device = "/dev/disk/by-uuid/e5cb0937-5af4-4987-87d4-336df6eb589f";
        fsType = "btrfs";
        options = [ "subvol=root" ];
      };

    boot.initrd.luks.devices."nixenc".device = "/dev/disk/by-uuid/183cd662-1ba6-41d6-bde9-d35495694aba";

    fileSystems."/home" =
      { device = "/dev/disk/by-uuid/e5cb0937-5af4-4987-87d4-336df6eb589f";
        fsType = "btrfs";
        options = [ "subvol=home" ];
      };

    fileSystems."/nix" =
      { device = "/dev/disk/by-uuid/e5cb0937-5af4-4987-87d4-336df6eb589f";
        fsType = "btrfs";
        options = [ "subvol=nix" ];
      };

    fileSystems."/persist" =
      { device = "/dev/disk/by-uuid/e5cb0937-5af4-4987-87d4-336df6eb589f";
        fsType = "btrfs";
        options = [ "subvol=persist" ];
      };

    fileSystems."/var/log" =
      { device = "/dev/disk/by-uuid/e5cb0937-5af4-4987-87d4-336df6eb589f";
        fsType = "btrfs";
        options = [ "subvol=log" ];
      };

    fileSystems."/boot" =
      { device = "/dev/disk/by-uuid/75EB-A9A6";
        fsType = "vfat";
        options = [ "fmask=0022" "dmask=0022" ];
      };

    swapDevices =
      [ { device = "/dev/disk/by-uuid/45b015e0-e547-4689-a134-fdb4840bf709"; }
      ];
  */

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
